@page "/reports/period/{start:datetime}/{end:datetime}"
@inject ReportServices reportServices

<PageTitle> Period report</PageTitle>
<MudText>it's a daily report from @start.ToShortDateString() to @end.ToShortDateString()</MudText>
<MudTh>Total income: @report?.TotalIncome</MudTh>
<MudTh>Total excpences: @report?.TotalExpenses</MudTh>

<MudTable T="TransactionDTO"
          items="@report?.Transactions"
          Hover="true"
          Breakpoint="Breakpoint.Sm"
          RowClass="cursor-pointer"
          LoadingProgressColor="Color.Info"
          OnRowClick="RowClickEvent">

    <HeaderContent>
        <MudTh>Name</MudTh>
        <MudTh>Price</MudTh>
        <MudTh>Date</MudTh>
        <MudTh>Storage name</MudTh>
        <MudTh>Description</MudTh>
    </HeaderContent>

    <RowTemplate>
        <MudLink Href="@href" Underline="Underline.Always">
            <MudTd DataLabel="Name">@context.Name</MudTd>
        </MudLink>
        <MudTd DataLabel="Price">@context.Price</MudTd>
        <MudTd DataLabel="Date">@context.Date.ToShortDateString()</MudTd>
        <MudTd DataLabel="Storage name">@context.Storage.Name</MudTd>
        <MudTd DataLabel="Description">@context.Description</MudTd>
    </RowTemplate>
</MudTable>

@code
{
    [Parameter]
    public DateTime start { get; set; }
    [Parameter]
    public DateTime end{ get; set; }

    ReportDTO? report;
    private string href;

    protected override async Task OnInitializedAsync()
    {
        report = await reportServices.GetPeriodAsync(start, end);
    }

    private void RowClickEvent(TableRowClickEventArgs<TransactionDTO> tableRowClickEventArgs)
    {
        href = "/transactions/details/" + tableRowClickEventArgs.Item.Id;
    }
}