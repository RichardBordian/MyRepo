@page "/categories/"

<PageTitle>Categories</PageTitle>

<MudGrid Justify="Justify.SpaceAround">
    <MudItem>
        <MudText Typo="Typo.h2">Category list:</MudText>
    </MudItem>
    <MudItem>
        <MudText Typo="Typo.h2">
            <MudLink Href="categories/create" Underline="Underline.Always">
                Create
            </MudLink>
        </MudText>
    </MudItem>
</MudGrid>

<MudTable
    T="CategoriesDTO"
    Items="@categories"
    Hover="true"
    Breakpoint="Breakpoint.Sm"
    RowClass="cursor-pointer"
    LoadingProgressColor="Color.Info"
    OnRowClick="RowClickEvent">
    
    <HeaderContent>
        <MudTh>Name</MudTh>
    </HeaderContent>

<RowTemplate>
    <MudLink Href="@detailsRef" Underline="Underline.Always">
        <MudTd DataLabel="Name">@context.Name</MudTd>
    </MudLink>

    <MudLink Href="@editRef">Edit</MudLink> | 
    <MudLink Href="@deleteRef">Delete</MudLink>
</RowTemplate>
</MudTable>

@code{
    private string? editRef;
    private string? deleteRef;
    private string? detailsRef;
    private List<CategoriesDTO>? categories = new List<CategoriesDTO>();
    static HttpClient httpClient = new HttpClient();

    protected override async Task OnInitializedAsync()
    {
        categories = await httpClient.GetFromJsonAsync<List<CategoriesDTO>>("http://localhost:5220/api/category");
    }

    private void RowClickEvent(TableRowClickEventArgs<CategoriesDTO> tableRowClickEventArgs)
    {
        detailsRef = "categories/details/" + tableRowClickEventArgs.Item.Id;
        editRef = "categories/edit/" + tableRowClickEventArgs.Item.Id;
        deleteRef = "categories/delete/" + tableRowClickEventArgs.Item.Id;
    }
}

