@page "/categories/edit/{id:int}"

<PageTitle>Edit</PageTitle>
<MudText>Edit @categoryInfo?.Name</MudText>
<MudForm @bind-IsValid="@success">
    <MudTextField T="string" Label="Name" @bind-Value="name" />
    <MudTextField T="string" Label="Description" @bind-Value="description" />
    <div class="d-flex align-center justify-space-between">
        <MudSwitch @bind-Value="@isIncome" Color="Color.Success" UnCheckedColor="Color.Error" Label="IsIncome"/>
        <MudButton Href="/categories/" OnClick="EditClick" Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)" Class="m1-auto">Edit</MudButton>
    </div>
</MudForm>

@code {
    [Parameter]
    public int id { get; set; }
    private string? name;
    private string? description;
    private bool isIncome;
    private CategoryViewDTO? categoryInfo;
    static HttpClient httpClient = new HttpClient();
    bool success;

    protected override async Task OnInitializedAsync()
    {
        categoryInfo = await httpClient.GetFromJsonAsync<CategoryViewDTO>($"http://localhost:5220/api/Category/{id}");
        name = categoryInfo?.Name;
        description = categoryInfo?.Description;
        isIncome = categoryInfo.IsIncome;
    }

    private async void EditClick()
    {
        CategoryUpdateDTO categoryUpdateDTO = new CategoryUpdateDTO() { Name = name, Description = description, IsIncome = isIncome, Id = id };
        await httpClient.PutAsJsonAsync($"http://localhost:5220/api/Category/{id}", categoryUpdateDTO);
    }
}