@page "/categories/edit/{id}"

<PageTitle>Edit</PageTitle>
<MudText> edit @categoryInfo.Name</MudText>
<MudForm @bind-IsValid="@success">
    <MudTextField T="string" Label="Name" @bind-Value="Name"/>
    <MudTextField T="string" Label="Description" @bind-Value="Description"/>
    <div class="d-flex align-center justify-space-between">
    <MudRadioGroup @bind-Value="IsIncome">
        <MudRadio Value="true" Color="Color.Primary" Dense="true">Income</MudRadio>
        <MudRadio Value="false" Color="Color.Secondary" Dense="false">Expenses</MudRadio>
    </MudRadioGroup>
    <MudButton Href="/categories" OnClick="EditClick" Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)">Edit</MudButton>
    </div>

</MudForm>

@code{
    [Parameter]
    public string Id { get; set; } = "";
    private string? Name;
    private string? Description;
    bool IsIncome;
    private CategoryViewDTO? categoryInfo;
    static HttpClient httpClient = new HttpClient();
    bool success;

    protected override async Task OnInitializedAsync()
    {
        categoryInfo = await httpClient.GetFromJsonAsync<CategoryViewDTO>($"http://localhost:5220/api/category/{Id}");
        Name = categoryInfo?.Name;
        Description = categoryInfo?.Description;
        IsIncome = categoryInfo.IsIncome;
    }

    private async void EditClick()
    {
        CategoryUpdateDTO categoryUpdateDTO = new CategoryUpdateDTO() { Name = Name, Description = Description, IsIncome = IsIncome, Id = Id };
        await httpClient.PutAsJsonAsync($"http://localhost:5220/api/category/{Id}", categoryUpdateDTO);
    }
}