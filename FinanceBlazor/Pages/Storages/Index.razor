@page "/"

<PageTitle>Storages</PageTitle>
<MudText Typo="Typo.h3" Class="ml-3">Hi user!</MudText>
<MudText Typo="Typo.subtitle1" Class="ml-3">It's your storage list</MudText>

<MudGrid Justify="Justify.SpaceAround">
    <MudItem>
        <MudText Typo="Typo.h2">Storage list:</MudText>
    </MudItem>
    <MudItem >
        <MudText Typo="Typo.h2">
            <MudLink Href="/create" Underline="Underline.Always">
                Create
            </MudLink>
        </MudText>
    </MudItem>
</MudGrid>

<MudTable 
    T="StoragesDTO"
    Items="@storages" 
    Hover="true" 
    Breakpoint="Breakpoint.Sm"
    RowClass="cursor-pointer"
    LoadingProgressColor="Color.Info"
    OnRowClick="RowClickEvent">
    
    <HeaderContent>
        <MudTh>Name</MudTh>
        <MudTh>Value</MudTh>
    </HeaderContent>

    <RowTemplate> 
        <MudLink Href="@detailsRef" Underline="Underline.Always">
            <MudTd DataLabel="Name">@context.Name</MudTd>
        </MudLink>
        <MudTd DataLabel="Value">@context.Value</MudTd>

        <MudLink Href="@editRef">Edit</MudLink>
         <MudText></MudText>
        <MudLink Href="@deleteRef">Delete</MudLink>
    </RowTemplate>
</MudTable>

@code
{
    private string? editRef;
    private string? deleteRef;
    private string? detailsRef;
    private List<StoragesDTO>? storages = new List<StoragesDTO>();
    static HttpClient httpClient = new HttpClient();

    protected override async Task OnInitializedAsync()
    {
        storages = await httpClient.GetFromJsonAsync<List<StoragesDTO>>("http://localhost:5220/api/Storage");
    }
    
    private void RowClickEvent(TableRowClickEventArgs<StoragesDTO> tableRowClickEventArgs)
    {
        detailsRef = "/details/" + tableRowClickEventArgs.Item.Id;
        editRef = "/edit/" + tableRowClickEventArgs.Item.Id;
        deleteRef = "/delete/" + tableRowClickEventArgs.Item.Id;
    }
}
